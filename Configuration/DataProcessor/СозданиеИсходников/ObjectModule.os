Перем Тексты;
Перем Каталог;

Функция ПолучитьСишноеПространствоИмен(Знач ПространствоИмен)
	
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "http://v8.1c.ru/", "");
	ПространствоИмен = СтрЗаменить(ПространствоИмен, ".", "_");
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "-", "");
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "/", "::");
	ПространствоИмен = "v" + ПространствоИмен;
	
	Возврат "v81c::" + ПространствоИмен;
	
КонецФункции

Функция ПолучитьИмяФайлаПространстваИмен(Знач ПространствоИмен)
	
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "http://v8.1c.ru/", "");
	ПространствоИмен = "/" + ПространствоИмен + ".hxx";
	
	Возврат ПространствоИмен;
	
КонецФункции

Функция ПолучитьОбъявлениеСишногоПространстваИмен(Знач ПространствоИмен)
	
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "http://v8.1c.ru/", "");
	ПространствоИмен = СтрЗаменить(ПространствоИмен, ".", "_");
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "-", "");
	ПространствоИмен = "v" + ПространствоИмен;
	
	ПространствоИмен = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ПространствоИмен, "/");
	
	Объявление = "namespace v81c { ";
	Для Каждого Имя Из ПространствоИмен Цикл
		
		Объявление = Объявление + "namespace " + Имя + " { ";
		
	КонецЦикла;
	
	Возврат Объявление;
	
КонецФункции

Функция ПолучитьЗавершениеОбъявленияСишногоПространстваИмен(Знач ПространствоИмен)
	
	ПространствоИмен = СтрЗаменить(ПространствоИмен, "http://v8.1c.ru/", "");
	ПространствоИмен = СтрЗаменить(ПространствоИмен, ".", "_");
	
	ПространствоИмен = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ПространствоИмен, "/");
	
	Объявление = "} ";
	Для Каждого Имя Из ПространствоИмен Цикл
		
		Объявление = Объявление + "} ";
		
	КонецЦикла;
	
	Возврат Объявление;
	
КонецФункции

Процедура ДобавитьТекстВФайл(Знач ПространствоИмен, Знач ТекстОбъявления)
	
	Текст = Тексты.Получить(ПространствоИмен);
	Если Текст = Неопределено Тогда
		
		Текст = Новый ТекстовыйДокумент;
		Тексты.Вставить(ПространствоИмен, Текст);
		
		Пространство = ПолучитьСишноеПространствоИмен(ПространствоИмен);
		Защитник = ВРЕГ(СтрЗаменить(Пространство, "::", "_")) + "_INCLUDED";
		
		Текст.ДобавитьСтроку("#ifndef " + Защитник);
		Текст.ДобавитьСтроку("#define " + Защитник);
		
		Текст.ДобавитьСтроку(ПолучитьОбъявлениеСишногоПространстваИмен(ПространствоИмен));
		
	КонецЕсли;
	
	Текст.ДобавитьСтроку(ТекстОбъявления);
	
КонецПроцедуры

Функция ОбработатьРезервноеСлово(Знач Имя)
	
	Если Имя = "true" Тогда
		Возврат "_true";
	КонецЕсли;
	
	Если Имя = "false" Тогда 
		Возврат "_false";
	КонецЕсли;
	
	Если Имя = "auto" Тогда 
		Возврат "_auto";
	КонецЕсли;
	
	Возврат Имя;
	
КонецФункции

Функция ВыполнитьСоздание() Экспорт
	
	Каталог = Новый Файл(КаталогВременныхФайлов() + "/xmr");
	УдалитьФайлы(Каталог.ПолноеИмя, "*");
	
	Каталог = Новый Файл(Каталог.ПолноеИмя + "/enums");
	СоздатьКаталог(Каталог.ПолноеИмя + "/src");
	
	Тексты = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ Ссылка, Наименование, Владелец, Элементы
		|ИЗ Справочник.Типы
		|ГДЕ Владелец В ИЕРАРХИИ (&Пространство)
		|	И Тип = ЗНАЧЕНИЕ(Перечисление.ТипыТипов.Перечисление)
		|"
	;
	Запрос.УстановитьПараметр("Пространство", ПространствоИмен);
	
	СериализаторЗаголовок = Новый ТекстовыйДокумент;
	СериализаторВключения = Новый ТекстовыйДокумент;
	СериализаторИсполнение = Новый ТекстовыйДокумент;
	
	СериализаторЗаголовок.ДобавитьСтроку("#ifndef V81C_XML_SERIALIZER_ENUMS");
	СериализаторЗаголовок.ДобавитьСтроку("#define V81C_XML_SERIALIZER_ENUMS");
	
	СериализаторЗаголовок.ДобавитьСтроку("#include <libxml++/libxml++.h>");
	СериализаторЗаголовок.ДобавитьСтроку("namespace v81c { namespace xml {");
	
	НомерСтрокиВставкиВключений = СериализаторЗаголовок.КоличествоСтрок();
	
	СериализаторИсполнение.ДобавитьСтроку("#include ""enums.hxx""");
	СериализаторИсполнение.ДобавитьСтроку("namespace v81c { namespace xml {");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = "enum class " + Выборка.Наименование + " { " + Символы.ПС;
		Элементы = Выборка.Элементы.Выбрать();
		ЗначениеПоУмолчанию = "";
		Пока Элементы.Следующий() Цикл 
			
			Значение = ОбработатьРезервноеСлово(Элементы.Имя);
			Текст = Текст + "    " + Значение + ", " + Символы.ПС;
			
			Если Не ЗначениеЗаполнено(ЗначениеПоУмолчанию) Или (ВРЕГ(Элементы.Имя) = "AUTO") Тогда
				
				ЗначениеПоУмолчанию = Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Текст = Текст + "    __LAST" + Символы.ПС;
		Текст = Текст + "};" + Символы.ПС;
		
		ДобавитьТекстВФайл(Выборка.Владелец, Текст);
		
		Пространство = ПолучитьСишноеПространствоИмен(Выборка.Владелец);
		
		Класс = "" + Пространство + "::" + Выборка.Наименование;
		
		СериализаторЗаголовок.ДобавитьСтроку(Класс + " &
				|__read(" + Класс + " &, xmlpp::Node *element);"
		);
		
		Исполнение = "Класс &
			|__read(Класс &dst, xmlpp::Node *element)
			|{
			|    dst = Класс::" + ЗначениеПоУмолчанию + ";
			|    const xmlpp::Node::NodeList children = element->get_children(); // совместимость с libxml++ < 2.36
			|    if (!children.empty()) {
			|        const xmlpp::Node *text = children.front();
			|        const xmlpp::TextNode *tn = dynamic_cast<const xmlpp::TextNode *>(text);
			|        std::string sc(tn->get_content().c_str());
			|"
		;
		
		Элементы = Выборка.Элементы.Выбрать();
		Пока Элементы.Следующий() Цикл 
			Исполнение = Исполнение + "
				|        if (sc == """ + Элементы.Имя + """) {
				|            dst = Класс::" + ОбработатьРезервноеСлово(Элементы.Имя) + ";
				|            return dst;
				|        }"
			;
		КонецЦикла;
		
		Исполнение = Исполнение + "
			|    }
			|    return dst;
			|}
			|"
		;
		
		СериализаторИсполнение.ДобавитьСтроку(СтрЗаменить(Исполнение, "Класс", Класс));
		
	КонецЦикла;
	
	СериализаторЗаголовок.ДобавитьСтроку("} }");
	СериализаторЗаголовок.ДобавитьСтроку("#endif // V81C_XML_SERIALIZER_ENUMS");
	
	СериализаторИсполнение.ДобавитьСтроку("} }");
	
	ИмяЗип = Новый Файл(КаталогВременныхФайлов() + "/xmr/enums.zip");
	Zip = Новый ЗаписьZipФайла(ИмяЗип.ПолноеИмя);
	
	Для Каждого Текст Из Тексты Цикл
		
		ИмяФайлаПространстваИмен = ПолучитьИмяФайлаПространстваИмен(Текст.Ключ);
		ИмяФайла = Каталог.ПолноеИмя + "/src" + ИмяФайлаПространстваИмен;
		Файл = Новый Файл(ИмяФайла);
		СоздатьКаталог(Файл.Путь);
	
		Текст.Значение.ДобавитьСтроку(ПолучитьЗавершениеОбъявленияСишногоПространстваИмен(Текст.Ключ));
		Текст.Значение.ДобавитьСтроку("#endif");
		Текст.Значение.Записать(ИмяФайла, КодировкаТекста.UTF8, Символы.пс);
		
		СериализаторВключения.ДобавитьСтроку("#include ""." + ИмяФайлаПространстваИмен + """");
		
	КонецЦикла;
	
	СериализаторЗаголовок.ВставитьСтроку(НомерСтрокиВставкиВключений, СериализаторВключения.ПолучитьТекст());
	СоздатьКаталог(Каталог.ПолноеИмя + "/src/xml");
	
	СериализаторЗаголовок.Записать(Каталог.ПолноеИмя + "/src/xml/enums.hxx", КодировкаТекста.UTF8, Символы.пс);
	СериализаторИсполнение.Записать(Каталог.ПолноеИмя + "/src/xml/enums.cxx", КодировкаТекста.UTF8, Символы.пс);
	
	Zip.Добавить(Каталог.ПолноеИмя + "/*", РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
		
	Zip.Записать();
	
	Возврат ИмяЗип.ПолноеИмя;
	
КонецФункции
